{"version":3,"sources":["firebaseInstance.js","components/SignInForm.js","components/SignUpForm.js","routes/Auth.js","routes/Nweet.js","components/NweetFactory.js","routes/home.js","components/LogOut.js","routes/Profile.js","components/SideBar.js","components/Router.js","components/App.js","index.js","../node_modules/typescript/lib sync"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","SignInForm","popup","onSignInClick","refreshUser","useState","email","setEmail","password","setPassword","newAccount","error","setError","ProfileName","setProfileName","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","updateProfile","currentUser","displayName","signInWithEmailAndPassword","message","Dialog","open","src","process","className","class","TextField","label","variant","required","type","Button","onClick","color","SignUpForm","history","useHistory","push","alt","Auth","setPopup","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","to","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNweNweet","updateDoc","doc","id","placeholder","autoFocus","prev","attachmentUrl","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileInput","useRef","fileRef","ref","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","docRef","console","log","onClearAttachment","current","maxLength","icon","faTimes","htmlFor","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","display","Home","nweets","setNweets","useEffect","nweetsQuery","query","orderBy","onSnapshot","querySnapshot","nweetArray","docs","map","data","marginTop","flexDirection","justifyContent","alignItems","width","maxWidth","LogOut","faTwitter","size","signOut","Profile","newDisplayName","setNewDisplayName","SideBar","fontSize","length","AppRouter","isLoggedIn","exact","path","App","setIsLoggedIn","init","setInit","setUserObj","onAuthStateChanged","user","Object","assign","ReactDOM","render","StrictMode","document","getElementById","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.b3a7f373.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBPbV4o2zH76dhw7JkommQTbTI87OdyeAM\",\n  authDomain: \"nwitter-1d80f.firebaseapp.com\",\n  projectId: \"nwitter-1d80f\",\n  storageBucket: \"nwitter-1d80f.appspot.com\",\n  messagingSenderId: \"358655136745\",\n  appId: \"1:358655136745:web:4aebabb917818b47af7178\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage(app);\n","import React, { useState } from \"react\";\nimport { authService } from \"firebaseInstance\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport { TextField } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Button from \"@material-ui/core/Button\";\nimport { updatePrefix } from \"../../node_modules/typescript/lib/typescript\";\n\nconst SignInForm = ({ popup, onSignInClick, refreshUser }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [ProfileName, setProfileName] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    } else if (name === \"name\") {\n      setProfileName(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n        await updateProfile(authService.currentUser, {\n          displayName: ProfileName,\n        });\n\n        refreshUser();\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <Dialog open={popup}>\n        <img\n          src={process.env.PUBLIC_URL + \"/assets/ic_logo.png\"}\n          className=\"popup_logo\"\n        />\n        <span class=\"PopupText\">계정을 생성하세요</span>\n        <form className=\"PopUp\" onSubmit={onSubmit}>\n          <TextField\n            label=\"이름\"\n            variant=\"outlined\"\n            name=\"name\"\n            value={ProfileName}\n            onChange={onChange}\n            onSignInClick\n            required\n            className=\"NameField\"\n          />\n          <TextField\n            name=\"email\"\n            label=\"이메일\"\n            variant=\"outlined\"\n            type=\"email\"\n            required\n            className=\"emailField\"\n            value={email}\n            onChange={onChange}\n          />\n          <TextField\n            name=\"password\"\n            label=\"패스워드\"\n            variant=\"outlined\"\n            type=\"password\"\n            required\n            className=\"passwordFiled\"\n            value={password}\n            onChange={onChange}\n          />\n          <div className=\"popup_buttons\">\n            <Button\n              variant=\"contained\"\n              onClick={onSignInClick}\n              className=\"popup_cannel_button\"\n            >\n              취소\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"popup_submit_button\"\n            >\n              확인\n            </Button>\n          </div>\n          {error && <span className=\"authError\">{error}</span>}\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default SignInForm;\n","import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { authService } from \"firebaseInstance\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUpForm = () => {\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const history = useHistory();\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      data = await signInWithEmailAndPassword(authService, email, password);\n      history.push(\"/\");\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return (\n    <div className=\"login_page\">\n      <div className=\"login_div\">\n        <img\n          src={process.env.PUBLIC_URL + \"/assets/ic_logo.png\"}\n          className=\"login_ic_logo\"\n          alt=\"\"\n        />\n        <span class=\"login_text\">트위터 로그인</span>\n        {error ? <span className=\"login_error_message\">{error}</span> : \"\"}\n        <div>\n          <form className=\"login_form\" onSubmit={onSubmit}>\n            <TextField\n              label=\"이메일\"\n              name=\"email\"\n              className=\"login_email_filed\"\n              variant=\"outlined\"\n              color=\"#4da0eb\"\n              value={email}\n              onChange={onChange}\n            ></TextField>\n            <TextField\n              label=\"비밀번호\"\n              name=\"password\"\n              className=\"login_password_filed\"\n              variant=\"outlined\"\n              color=\"#4da0eb\"\n              value={password}\n              onChange={onChange}\n              type=\"password\"\n            ></TextField>\n            <button type=\"submit\" className=\"login_LoginButton\">\n              <img\n                src={process.env.PUBLIC_URL + \"/assets/login_button.png\"}\n                alt=\"\"\n              />\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import React, { useState } from \"react\";\nimport { authService } from \"firebaseInstance\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { TextField } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Button from \"@material-ui/core/Button\";\nimport SignInForm from \"components/SignInForm\";\nimport SignUpForm from \"components/SignUpForm\";\nimport { HashRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nconst Auth = ({ refreshUser }) => {\n  const [popup, setPopup] = useState(false);\n  const [login, setLogin] = useState(false);\n\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    }\n\n    const data = await signInWithPopup(authService, provider);\n  };\n\n  const onSignInClick = () => {\n    if (popup === true) {\n      setPopup(false);\n    } else {\n      setPopup(true);\n    }\n  };\n\n  const test = () => {};\n  return (\n    <div className=\"Starting-Page\">\n      <div className=\"SrartTwitter\">\n        <img\n          className=\"img_StartTwitter\"\n          src={process.env.PUBLIC_URL + \"/assets/img_StartTwitter.png\"}\n          alt=\"start-img\"\n        ></img>\n      </div>\n      <div className=\"StartText\">\n        <img\n          src={process.env.PUBLIC_URL + \"/assets/ic_logo.png\"}\n          className=\"ic_logo\"\n          alt=\"\"\n        />\n        <span className=\"aaa\">지금 일어나고 있는 일</span>\n        <span className=\"sss\">오늘 트위터에 가입하세요.</span>\n        <img\n          src={process.env.PUBLIC_URL + \"/assets/btn-blue.png\"}\n          className=\"signInImg\"\n          onClick={onSignInClick}\n          alt=\"\"\n        />\n        <Link to=\"/login\">\n          <img\n            src={process.env.PUBLIC_URL + \"/assets/btn-white.png\"}\n            className=\"signUpImg\"\n            alt=\"\"\n          />\n        </Link>\n        <img\n          src={process.env.PUBLIC_URL + \"/assets/google_login_button.png\"}\n          className=\"googleLogin\"\n          name=\"google\"\n          onClick={onSocialClick}\n          alt=\"\"\n        />\n      </div>\n      {setPopup ? (\n        <SignInForm\n          popup={popup}\n          onSignInClick={onSignInClick}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n\n    // <div className=\"authContainer\">\n    //   <FontAwesomeIcon\n    //     icon={faTwitter}\n    //     color={\"#04AAFF\"}\n    //     size=\"3x\"\n    //     style={{ marginBottom: 30 }}\n    //   />\n    //   <AuthForm />\n    //   <div className=\"authBtns\">\n    //     <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n    //       Google로 시작하기 <FontAwesomeIcon icon={faGoogle} />\n    //     </button>\n    //   </div>\n    // </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { dbService, storageService } from \"firebaseInstance\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNweNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"정말 트윗을 삭제하시겠습니까?\");\n\n    if (ok) {\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n\n      if (nweetObj.attachmentUrl !== \"\") {\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n      }\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <div className=\"nweet__column\">\n            <div>\n              <img\n                className=\"factoryInput__userprofile\"\n                src={process.env.PUBLIC_URL + \"/assets/ic_userprofile.png\"}\n              />\n            </div>\n            <div>\n              {\" \"}\n              <h2>{nweetObj.displayName}</h2>\n              <h4>{nweetObj.text}</h4>\n              {nweetObj.attachmentUrl && (\n                <div className=\"nweet__image\">\n                  <img src={nweetObj.attachmentUrl} />\n                </div>\n              )}\n            </div>\n          </div>\n          <div></div>\n          {/* {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )} */}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState, useRef } from \"react\";\nimport { dbService, storageService } from \"firebaseInstance\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const fileInput = useRef();\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n\n      const response = await uploadString(fileRef, attachment, \"data_url\");\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n\n    try {\n      const docRef = await addDoc(collection(dbService, \"nweets\"), {\n        text: nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentUrl,\n        displayName: userObj.displayName,\n      });\n      console.log(\"Document written with ID:\", docRef.id);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setNweet(\"\");\n    onClearAttachment();\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n\n    const file = files[0];\n\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n    fileInput.current.value = \"\";\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <div className=\"factoryInput__row1\">\n          <img\n            className=\"factoryInput__userprofile\"\n            src={process.env.PUBLIC_URL + \"/assets/ic_userprofile.png\"}\n          />\n          <div className=\"factoryInput__inputDiv\">\n            <input\n              className=\"factoryInput__input\"\n              value={nweet}\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"무슨 일이 일어나고 있나요?\"\n              maxLength={120}\n            />\n            {attachment && (\n              <div className=\"factoryInput__image\">\n                <img src={attachment} alt=\"attachment_image\"></img>\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                  <FontAwesomeIcon icon={faTimes} />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"factoryInput__nweetButton\">\n          <div className=\"factoryInput__icons\">\n            {\" \"}\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n              <img src={process.env.PUBLIC_URL + \"/assets/ic_image.png\"} />\n            </label>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n              <img src={process.env.PUBLIC_URL + \"/assets/ic_gif.png\"} />\n            </label>\n            <img src={process.env.PUBLIC_URL + \"/assets/ic_gragh.png\"} />\n            <img src={process.env.PUBLIC_URL + \"/assets/ic_smile.png\"} />\n            <img src={process.env.PUBLIC_URL + \"/assets/ic_schedule.png\"} />\n            <input\n              id=\"attach-file\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={onFileChange}\n              style={{\n                opacity: 0,\n                display: \"none\",\n              }}\n              ref={fileInput}\n            />\n            {}\n          </div>\n          {nweet || attachment ? (\n            <button className=\"factoryInput__fillButton\">트윗하기</button>\n          ) : (\n            <button className=\"factoryInput__button\">트윗하기</button>\n          )}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { dbService, storageService } from \"firebaseInstance\";\nimport { orderBy, collection, onSnapshot, query } from \"firebase/firestore\";\nimport Nweet from \"./Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport Navigation from \"components/Navigation\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    const nweetsQuery = query(\n      collection(dbService, \"nweets\"),\n      orderBy(\"createdAt\", \"desc\")\n    );\n\n    onSnapshot(nweetsQuery, (querySnapshot) => {\n      const nweetArray = querySnapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"container__bar\">\n        <h2>홈</h2>\n      </div>\n      <NweetFactory userObj={userObj} />\n      <div\n        style={{\n          marginTop: 30,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"flex-start\",\n          width: \"100%\",\n          maxWidth: \"600px\",\n        }}\n      >\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"firebaseInstance\";\nimport { signOut, updateProfile } from \"firebase/auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Button from \"@material-ui/core/Button\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LogOut = ({ popup, setPopup }) => {\n  const history = useHistory();\n  const onLogOutClick = () => {\n    signOut(authService);\n    history.push(\"/\");\n  };\n\n  const onCancelClick = () => {\n    setPopup(false);\n  };\n  return (\n    <>\n      <Dialog open={popup}>\n        <div className=\"logOut__container\">\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" />\n          <span className=\"logOut__message1\">트위터에서 로그아웃할까요?</span>\n          <span className=\"logOut__message2\">\n            언제든지 다시 로그인할 수 있습니다. 계정을 전환하려는 경우 이미\n            존재하는 계정을 추가하면 전환할 수 있습니다.{\" \"}\n          </span>\n          <div className=\"logOut__buttons\">\n            <button className=\"logout_cannel_button\" onClick={onCancelClick}>\n              취소\n            </button>\n            <button className=\"logOut__button\" onClick={onLogOutClick}>\n              로그아웃\n            </button>\n            {/* <Button variant=\"contained\" onClick={onCancelClick}>\n              취소\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={onLogOutClick}>\n              로그아웃\n            </Button> */}\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport default LogOut;\n","import React, { useEffect, useState } from \"react\";\nimport { signOut, updateProfile } from \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, dbService } from \"firebaseInstance\";\nimport {\n  collection,\n  query,\n  where,\n  orderBy,\n  QuerySnapshot,\n  getDocs,\n} from \"firebase/firestore\";\nimport LogOut from \"components/LogOut\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [popup, setPopup] = useState(false);\n  const onLogOutClick = () => {\n    if (popup === true) {\n      setPopup(false);\n    } else {\n      setPopup(true);\n    }\n    // signOut(authService);\n    // history.push(\"/\");\n  };\n\n  const getMyNweets = async () => {\n    const nweetsRef = await collection(dbService, \"nweets\");\n\n    const nweetsQuery = await query(\n      collection(dbService, \"nweets\"),\n      where(\"creatorId\", \"==\", userObj.uid),\n      orderBy(\"createdAt\")\n    );\n\n    const querySnapshot = await getDocs(nweetsQuery);\n    querySnapshot.forEach((doc) => {\n      console.log(doc.data());\n    });\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(userObj, {\n        displayName: newDisplayName,\n      });\n      refreshUser();\n      setNewDisplayName(\"\");\n      history.push(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    //getMyNweets();\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"profile\">\n        {\" \"}\n        <form onSubmit={onSubmit} className=\"profileForm\">\n          <input\n            onChange={onChange}\n            type=\"text\"\n            autoFocus\n            placeholder=\"이름\"\n            value={newDisplayName}\n            className=\"formInput\"\n          />\n          <input\n            type=\"submit\"\n            value=\"프로필 업데이트\"\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n          />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n          로그아웃\n        </span>\n      </div>\n      {setPopup ? <LogOut popup={popup} setPopup={setPopup} /> : \"\"}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SideBar = ({ userObj }) => {\n  console.log(userObj);\n  return (\n    <div className=\"sideBar__container\">\n      <div className=\"sideBar__col\">\n        <div className=\"sideBar__icons\">\n          {\" \"}\n          <Link to=\"/\" className=\"sideBar__logo\">\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n          <div className=\"sideBar__nav\">\n            <Link to=\"/\" className=\"icon\">\n              <img\n                src={process.env.PUBLIC_URL + \"/assets/ic_home_activation.png\"}\n              />\n              <h2>홈</h2>\n            </Link>\n            <div className=\"icon\">\n              <img\n                src={\n                  process.env.PUBLIC_URL +\n                  \"/assets/ic_ exploration_deactivation.png\"\n                }\n              />\n              <h2>탐색하기</h2>\n            </div>\n            <div className=\"icon\">\n              <img\n                src={\n                  process.env.PUBLIC_URL + \"/assets/ic_notice_deactivation.png\"\n                }\n              />\n              <h2>알림</h2>\n            </div>\n            <div className=\"icon\">\n              <img\n                src={\n                  process.env.PUBLIC_URL + \"/assets/ic_message_deactivation.png\"\n                }\n              />\n              <h2>쪽지</h2>\n            </div>\n            <div className=\"icon\">\n              <img\n                src={\n                  process.env.PUBLIC_URL +\n                  \"/assets/ic_bookmark_deactivation.png\"\n                }\n              />\n              <h2>북마크</h2>\n            </div>\n            <div className=\"icon\">\n              <img\n                src={\n                  process.env.PUBLIC_URL + \"/assets/ic_list_deactivation.png\"\n                }\n              />\n              <h2>리스트</h2>\n            </div>\n            <Link to=\"/profile\" className=\"icon\">\n              <img\n                src={\n                  process.env.PUBLIC_URL + \"/assets/ic_profile_deactivation.png\"\n                }\n              />\n              <h2>프로필</h2>\n            </Link>\n          </div>\n        </div>\n        <div className=\"sideBar__profile\">\n          <Link\n            to=\"/profile\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <div className=\"sideBar__user\">\n              {\" \"}\n              <img\n                src={process.env.PUBLIC_URL + \"/assets/ic_userprofile.png\"}\n              />\n              <div className=\"sideBar__userName\">\n                <span>\n                  {userObj?.displayName?.length ? `${userObj.displayName}` : \"\"}\n                </span>\n                <span>{userObj?.email?.length ? `${userObj.email}` : \"\"}</span>\n              </div>\n            </div>\n          </Link>\n        </div>\n      </div>\n\n      {/* <ul>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj?.displayName?.length\n                ? `${userObj.displayName}'의 프로필`\n                : \"프로필\"}\n            </span>\n          </Link>\n        </li>\n      </ul> */}\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"routes/Profile\";\nimport SignUpForm from \"./SignUpForm\";\nimport SideBar from \"./SideBar\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <div className=\"App\">\n      {\" \"}\n      <Router>\n        {isLoggedIn && (\n          <header className=\"App__header\">\n            <SideBar userObj={userObj} />\n          </header>\n        )}\n\n        <Switch>\n          <main className=\"App__main\">\n            {isLoggedIn ? (\n              <>\n                <div\n                  style={{\n                    width: \"100%\",\n                    display: \"flex\",\n                  }}\n                >\n                  <Route exact path=\"/\">\n                    <Home userObj={userObj} />\n                  </Route>\n                  <Route exact path=\"/profile\">\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\n                  </Route>\n                </div>\n              </>\n            ) : (\n              <>\n                <Route exact path=\"/\">\n                  <Auth refreshUser={refreshUser} />\n                </Route>\n                <Route exact path=\"/login\">\n                  <SignUpForm userObj={userObj} refreshUser={refreshUser} />\n                </Route>\n              </>\n            )}\n          </main>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../firebaseInstance\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(\"\");\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  });\n\n  const refreshUser = () => {\n    setUserObj(Object.assign({}, authService.currentUser));\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles2.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 78;"],"sourceRoot":""}